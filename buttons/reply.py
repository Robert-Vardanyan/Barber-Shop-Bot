# Variant 1
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, KeyboardButtonPollType
# Variant 2
from aiogram.utils.keyboard import ReplyKeyboardBuilder


start_but = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text='‚úÖ ‘≥÷Ä’°’∂÷Å’æ’•’¨'),
            KeyboardButton(text='üí¢ ’ã’∂’ª’•’¨ ’£÷Ä’°’∂÷Å’∏÷Ç’¥’®'),

        ],
        [
            KeyboardButton(text='‚òéÔ∏è ‘∂’°’∂’£’°’∞’°÷Ä’•’¨'),
            KeyboardButton(text='üìç ‘≥’ø’∂’æ’•’¨’∏÷Ç ’é’°’µ÷Ä’®'),
        ],
        [
            KeyboardButton(text='üß° ’ç’∏÷Å. ÷Å’°’∂÷Å'),
            KeyboardButton(text='üí∞ ‘≥’∂’°÷Å’∏÷Ç÷Å’°’Ø'),
        ]
    ],
    resize_keyboard=True, #Ps. vor gracin hamapatasxan ereva
    input_field_placeholder='’Ä’∂ ’Ω÷Ä’ø’´’Ø’§ ’´’∂’π ’Ø’∏÷Ç’¶’´ ü§î'
)

del_kbd = ReplyKeyboardRemove()


# Funkcia vor texum miangamic stexcenq knopkaner (tesaneli e darcnum handlerum ogtagorceluc)
def get_keyboard(
    *btns: str,
    placeholder: str = None,
    request_contact: int = None,
    request_location: int = None,
    sizes: tuple[int] = (2,),
):
    '''
    Parameters request_contact and request_location must be as indexes of btns args for buttons you need.
    Example:
    get_keyboard(
            "–ú–µ–Ω—é",
            "–û –º–∞–≥–∞–∑–∏–Ω–µ",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            placeholder="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            request_contact=4,
            sizes=(2, 2, 1)
        )
    '''
    keyboard = ReplyKeyboardBuilder()

    for index, text in enumerate(btns, start=0):
        
        if request_contact and request_contact == index:
            keyboard.add(KeyboardButton(text=text, request_contact=True))

        elif request_location and request_location == index:
            keyboard.add(KeyboardButton(text=text, request_location=True))
        else:
            keyboard.add(KeyboardButton(text=text))

    return keyboard.adjust(*sizes).as_markup(
            resize_keyboard=True, input_field_placeholder=placeholder)